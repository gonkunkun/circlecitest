version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.1.0
  aws-ecr: circleci/aws-ecr@8.2.1

jobs:
  Hello-World:
    docker:
      - image: alpine:3.15
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
    steps:
      - run:
          name: Saying Hello
          command: |
            echo 'Hello world'
            echo 'This is the delivery pipeline'
  Fetch-Code:
    docker:
      - image: cimg/base:2021.04
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Getting the Code
          command: |
            ls -al
            echo '^^^The files in your repo^^^'
  Using-Node:
    docker:
      - image: cimg/node:17.2
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
    steps:
      - run:
          name: Running the Node Container
          command: |
            node -v
  Now-Complete:
      docker:
        - image: alpine:3.15
          auth:
            username: mydockerhub-user
            password: $DOCKERHUB_PASSWORD
      steps:
        - run:
            name: Approval Now-Complete
            command: |
              echo 'The work is now complete.'
  manual-build-and-push:
    docker:
    - image: cimg/node:17.2
      auth:
        username: mydockerhub-user
        password: $DOCKERHUB_PASSWORD
    steps:
    - checkout
    - setup_remote_docker
    - aws-cli/install
    - run :
        name: docker build
        command: |
          docker build -f ./docker/Dockerfile -t ${AWS_RESOURCE_NAME_PREFIX}:latest .
    - run:
        name: push
        command: |
          aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
          docker tag ${AWS_RESOURCE_NAME_PREFIX}:latest ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX}:${CIRCLE_SHA1}
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX}:${CIRCLE_SHA1}
# https://zenn.dev/takamin55/articles/6900fa8b2ac21c
  aws-build-and-push:
    docker:
      - image: cimg/base:2022.12
    environment:
      DOCKER_BUILDKIT: "1"
    steps:
      - setup_remote_docker:
          version: 20.10.2
          docker_layer_caching: true
      - run:
          name: Before
          command: |
            env
      - run:
          name: Before
          command: |
            export GITHUB_TOKEN='${GITHUB_TOKEN}'
      - run:
          name: After
          command: |
            env
      - aws-ecr/build-and-push-image:
          repo: "${AWS_RESOURCE_NAME_PREFIX}"
          tag: "${CIRCLE_SHA1}"
          path: "./docker"
          dockerfile: "Dockerfile"
          extra-build-args: "--secret id=github_access_token,env=GITHUB_TOKEN"
# https://github.com/CircleCI-Public/aws-ecr-orb/issues/77
# https://circleci.com/developer/ja/images/image/cimg/base

workflows:
  # Example-Workflow:
  #   jobs:
  #   - Hello-World
  #   - Fetch-Code:
  #       requires:
  #         - Hello-World
  #   - Using-Node:
  #       requires:
  #         - Fetch-Code
  #   - Hold-for-Approval:
  #       type: approval
  #       requires:
  #         - Using-Node
  #         - Fetch-Code
  #   - Now-Complete:
  #       requires:
  #       - Hold-for-Approval
  build-and-deploy:
    jobs:
    - aws-build-and-push:
        context:
          - CIRCLECI_SAMPLE_CONTEXT
          - github_token
    # - aws-ecr/build-and-push-image:
    #     repo: "${AWS_RESOURCE_NAME_PREFIX}"
    #     tag: "${CIRCLE_SHA1}"
    #     path: "./docker"
    #     dockerfile: "Dockerfile"
    #     extra-build-args: "--secret id=github_access_token,env=GITHUB_TOKEN"
    # - manual-build-and-push:
    #     context:
    #       - CIRCLECI_SAMPLE_CONTEXT

# https://github.com/CircleCI-Public/aws-ecr-orb/issues/143
# https://github.com/CircleCI-Public/cimg-base/issues/147
# https://github.com/CircleCI-Public/aws-ecr-orb/issues/77 こうするしかないのか
# https://github.com/signavio/circleci-aws-ecr-eks-orb/pull/21
